<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Main Application Log File -->
    <appender name="APP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/application.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/application-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Error Log File -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/error-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

	<!-- Hibernate SQL logging -->
	<logger name="org.hibernate.SQL" level="DEBUG"
		additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>

	<!-- Hibernate parameter binding logging -->
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder"
		level="TRACE" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
    
    <!-- Specific loggers by package -->
    
    <!-- Controller Layer: INFO only -->
    <logger name="com.example.BasicProjectTemplate.controller" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </logger>

    <!-- Service Layer: DEBUG for deeper information -->
    <logger name="com.example.BasicProjectTemplate.service" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </logger>

    <!-- Repository Layer: TRACE to see database activities -->
    <logger name="com.example.BasicProjectTemplate.repository" level="TRACE" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </logger>

    <!-- Exception Layer: INFO (for handled exceptions) -->
    <logger name="com.example.BasicProjectTemplate.exception" level="INFO" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </logger>

    <!-- AOP Aspect Layer: DEBUG -->
    <logger name="com.example.BasicProjectTemplate.aspect" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </logger>

    <!-- Root logger: fallback for other things -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APP_FILE" />
        <appender-ref ref="ERROR_FILE" />
    </root>
    
    <!-- Root logger -->
     <root level="INFO">
        <appender-ref ref="STDOUT"/>
    </root> 
</configuration>

<!-- 
What this setup does:

Logs to console and file both

Saves logs daily to:

logs/application-2025-04-28.log.gz (compressed daily logs)

Keeps 30 days history

Archives logs into .gz files (compressed!) 
If logback-spring.xml is present, it overrides default logging setup.

The logs will be created automatically in /logs/ folder under your project.

Show INFO logs from Controller (clean and readable for API calls)

Show DEBUG/TRACE logs from Service/Repository (detailed internals)

Separate errors into error.log

Keep application.log cleaner for general analysis

âœ… You have now fine-grained control over each layer's verbosity.
-->
